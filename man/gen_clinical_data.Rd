% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_clinical_data.R
\name{gen_clinical_data}
\alias{gen_clinical_data}
\title{Provide a list of dfs with clinical samples and dictionary data set}
\usage{
gen_clinical_data(
  clinical_data,
  clinical_cols,
  dictionary,
  selected_samples_df,
  ppid_col,
  dict_variable,
  specimen_cols = c("Participant_PPID", "Specimen_Barcode", "Specimen_Specimen Label"),
  additional_data = NULL
)
}
\arguments{
\item{clinical_data}{Clinical data set}

\item{clinical_cols}{Clinical column names to cinclude}

\item{dictionary}{Dictionary to provide to sample requester}

\item{selected_samples_df}{aliquots to send ideally a data.frame from  findBiobankR::process_save_selected_aliquots or lab data specimen data}

\item{ppid_col}{Participant id column A column that should be in \code{selected_samples_df} and \code{clinical_data} for merging}

\item{dict_variable}{dictionary variable name containing clinical cols}

\item{specimen_cols}{Required columns from specimen data frame}

\item{additional_data}{and Additiona data frame that should contain \code{ppid_col}}
}
\value{
A list of data.frames
}
\description{
This function processes clinical data set, lab data set and a dictionary.
}
\examples{
library(data.table)
library(dplyr)
data("tb_data", package = "findBiobankR")
data("tb_specimen_df", package = "findBiobankR")
data("tb_dictionary", package = "findBiobankR")
# required clinical cols
clinical_cols <- c("tb_group", "hiv_status", "sex", "country") 

clin_specs  <- convert_os_df_to_wide(clinical_df = tb_data,
                                     specimen_df = tb_specimen_df, 
                                     join_by_col = "ppid",
                                     specimen_col ="specimen_type" ,
                                     clinical_vars = clinical_cols ,
                                     specimen_label_col = "specimen_label",
                                     os_aliquot_names = c("Serum", "Plasma")
)


clin_specs[1:4, serum_aliquot := select_one_aliquot(NP_labels_serum, aliquot_number = 1 )]
clin_specs[1:4, plasma_aliquot := select_one_aliquot(NP_labels_plasma, aliquot_number= 1 )]


selected_samples <- selected_aliquots_df(clin_specs,
                                         aliquot_cols = c("serum_aliquot","plasma_aliquot"),
                                         ppid_col = "ppid")

os_required_cols <- c("ppid",
                      "Specimen_Specimen Label",
                      "Specimen_Type",
                      "Specimen_Requirement Name", 
                      "Specimen_Barcode",
                      "Specimen_Container Name", 
                      "Specimen_Container Position",
                      "Scanned_barcode")
selected_samples_df <- process_save_selected_aliquots(file_path = NULL,
                                                      save_file= FALSE,
                                                      selected_samples = selected_samples,
                                                      os_position = tb_specimen_df,
                                                      ppid_col = "ppid",
                                                      specimen_id_col = "specimen_label",
                                                      os_required_cols = os_required_cols )

gen_clinical_data(clinical_data = tb_data,
                  clinical_cols= clinical_cols,
                  dictionary = tb_dictionary,
                  selected_samples_df = selected_samples_df,
                  ppid_col = "ppid",
                  dict_variable = "variable_name",
                  specimen_cols = c("ppid", "Specimen_Specimen Label", "Specimen_Type"),
                  additional_data = NULL )

}

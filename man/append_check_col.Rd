% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/append_check_col.R
\name{append_check_col}
\alias{append_check_col}
\title{Append excel if condition}
\usage{
append_check_col(
  selected_samples = NULL,
  os_position,
  ppid_col = "Participant_PPID",
  specimen_id_col = "specimen_label",
  os_required_cols = c("Specimen_Specimen Label", "Specimen_Type",
    "Specimen_Requirement Name", "Specimen_Barcode", "Specimen_Container Name",
    "Specimen_Container Position"),
  scanned_bar_code_col = "Scanned_barcode"
)
}
\arguments{
\item{selected_samples}{A data frame from findBiobankR::selected_aliquots_df. If this is null please ensure that
os data set contains only column to send}

\item{os_position}{This a data set that comes from open specimen}

\item{ppid_col}{Participant id column.}

\item{specimen_id_col}{Specimen ID column name}

\item{os_required_cols}{Column names required to send a list to a requester}

\item{scanned_bar_code_col}{The name of the barcode column name with retrieved specimens}
}
\value{
A data.table with a checked column
}
\description{
usually we usually add a true false column to check if the shipped barcode is
the barcode/specimen label  we selected. This function does exactly that it combines
OS data set and selected
}
\examples{

library(data.table)
library(dplyr)
data("tb_data", package = "findBiobankR")
#data("tb_specimen_df", package = "findBiobankR")

# required clinical cols
clinical_cols <- c("tb_group", "hiv_status", "sex", "country") 

clin_specs  <- convert_os_df_to_wide(clinical_df = tb_data,
                                     specimen_df = tb_specimen_df, 
                                     join_by_col = "ppid",
                                     specimen_col ="specimen_type" ,
                                     clinical_vars = clinical_cols ,
                                     specimen_label_col = "specimen_label",
                                     os_aliquot_names = c("Serum", "Plasma")
)


clin_specs[, serum_aliquot := select_one_aliquot(NP_labels_serum, aliquot_number = 1 )]
clin_specs[, plasma_aliquot := select_one_aliquot(NP_labels_plasma, aliquot_number= 1 )]

# or tidyverse way

selected_samples <- selected_aliquots_df(clin_specs,
                                         aliquot_cols = c("serum_aliquot","plasma_aliquot"),
                                         ppid_col = "ppid")

df_send <- append_check_col(selected_samples = selected_samples,
                            os_position = tb_specimen_df,
                            ppid_col = "ppid",
                            specimen_id_col = "specimen_label")

df_send
}

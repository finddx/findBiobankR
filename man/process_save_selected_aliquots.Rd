% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_save_selected_aliquots.R
\name{process_save_selected_aliquots}
\alias{process_save_selected_aliquots}
\title{Save selected aliquots as excel}
\usage{
process_save_selected_aliquots(file_path = NULL, save_file = FALSE, ...)
}
\arguments{
\item{file_path}{The location to save your file as .xlsx}

\item{save_file}{Logical to save file in}

\item{...}{arguments taken by findBiobankR::append_check_col}
}
\value{
A data frame silently writes a file to given path
}
\description{
Save the selected aliquots with the check column data set in excel
}
\examples{

library(data.table)
library(dplyr)
data("tb_data", package = "findBiobankR")
#data("tb_specimen_df", package = "findBiobankR")

# required clinical cols
clinical_cols <- c("tb_group", "hiv_status", "sex", "country") 

clin_specs  <- convert_os_df_to_wide(clinical_df = tb_data,
                                     specimen_df = tb_specimen_df, 
                                     join_by_col = "ppid",
                                     specimen_col ="specimen_type" ,
                                     clinical_vars = clinical_cols ,
                                     specimen_label_col = "specimen_label",
                                     os_aliquot_names = c("Serum", "Plasma")
)


clin_specs[, serum_aliquot := select_one_aliquot(NP_labels_serum, aliquot_number = 1 )]
clin_specs[, plasma_aliquot := select_one_aliquot(NP_labels_plasma, aliquot_number= 1 )]


selected_samples <- selected_aliquots_df(clin_specs,
                                         aliquot_cols = c("serum_aliquot","plasma_aliquot"),
                                         ppid_col = "ppid")

path_name <- tempfile(pattern = "create_work_book") \%>\%
  normalizePath(winslash = "/")

dir.create(path_name)

# create file name
path_name <- file.path(path_name, "aliquots.xlsx")

process_save_selected_aliquots(file_path = path_name,
                               save_file= TRUE,
                               selected_samples = selected_samples,
                               os_position = tb_specimen_df,
                               ppid_col = "ppid",
                               specimen_id_col = "specimen_label",
                               os_required_cols = c("ppid",
                                                    "Specimen_Specimen Label",
                                                    "Specimen_Type",
                                                    "Specimen_Requirement Name", 
                                                    "Specimen_Barcode",
                                                    "Specimen_Container Name", 
                                                    "Specimen_Container Position",
                                                    "Scanned_barcode"))

}

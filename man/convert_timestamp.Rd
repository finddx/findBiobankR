% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_timestamp.R
\name{convert_timestamp}
\alias{convert_timestamp}
\title{Convert Timestamp to Date}
\usage{
convert_timestamp(x, return_numeric = FALSE)
}
\arguments{
\item{x}{The numeric timestamp, character timestamp string, or a data frame.}

\item{return_numeric}{(Optional) Return the converted date as numeric. Default is FALSE.}
}
\value{
The converted date as a date time object or a data frame with converted columns.
}
\description{
This function can handle numeric or character inputs to convert timestamps to date time objects,
and can also process specified timestamp columns in a data frame.
}
\examples{

timestamps <- c("1625068800000", "1625068801000", "1625068802000")
converted_timestamps <- timestamp_to_date(timestamps)
converted_timestamps

timestamps_numeric <- c(1625068800000, 1625068801000, 1625068802000)
converted_timestamps_numeric <- timestamp_to_date(timestamps_numeric)
converted_timestamps_numeric
timestamps_with_specials <- c("1625068800000", "2021-07-01 00:00:00", "1625068800/1000")
timestamps_with_specials <- c("1625068800000", "2021-07-01 00:00:00", "1625068800/1000")
timestamps_with_specials
# Example 2: Convert timestamp columns in a data frame
df <- data.table::data.table(id = c(1, 2, 3),
                 event_date_num = c(1637892323000, 1637892423000, 1637892523000),
                 event_date_char = c("1637892323000", "1637892423000", "1637892523000")
                 )


df = timestamp_to_date(df, return_numeric = FALSE)

df


date_time_strings <-c("2017-03-22 12:34:56", "2017.03.22 12:34", "2017/03/22 12", 
                      "2017-03-22", "22.03.2017 12:34:56", "22/03/2017 12:34", "22-03-2017 12", 
                      "22.03.2017", "03/22/2017 12:34:56", "03-22-2017 12:34", "03.22.2017 12", 
                      "03/22/2017")

timestamp_to_date(date_time_strings)


}
